ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"los_hw.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.osSchedule,"ax",%progbits
  18              		.align	1
  19              		.global	osSchedule
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	osSchedule:
  26              	.LFB133:
  27              		.file 1 "D:/iot/felix2/arch/arm/arm-m/src/los_hw.c"
   1:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*----------------------------------------------------------------------------
   2:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * Copyright (c) <2013-2018>, <Huawei Technologies Co., Ltd>
   3:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * All rights reserved.
   4:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * Redistribution and use in source and binary forms, with or without modification,
   5:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * are permitted provided that the following conditions are met:
   6:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * 1. Redistributions of source code must retain the above copyright notice, this list of
   7:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * conditions and the following disclaimer.
   8:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice, this list
   9:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * of conditions and the following disclaimer in the documentation and/or other materials
  10:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * provided with the distribution.
  11:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * 3. Neither the name of the copyright holder nor the names of its contributors may be used
  12:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * to endorse or promote products derived from this software without specific prior written
  13:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * permission.
  14:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  15:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  16:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  17:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  18:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  19:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  20:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  21:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  22:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  23:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  24:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  25:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *---------------------------------------------------------------------------*/
  26:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*----------------------------------------------------------------------------
  27:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * Notice of Export Control Law
  28:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * ===============================================
  29:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * Huawei LiteOS may be subject to applicable export control laws and regulations, which might
  30:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * include those applicable to Huawei LiteOS of U.S. and the country in which you are located.
  31:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * Import, export and usage of Huawei LiteOS in any manner by you shall be in compliance with such
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 2


  32:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  * applicable export control laws and regulations.
  33:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *---------------------------------------------------------------------------*/
  34:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  35:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #include "los_base.h"
  36:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #include "los_task.ph"
  37:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #include "los_hw.h"
  38:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #include "los_priqueue.ph"
  39:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  40:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #ifdef __cplusplus
  41:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #if __cplusplus
  42:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** extern "C" {
  43:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #endif /* __cplusplus */
  44:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #endif /* __cplusplus */
  45:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  46:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  47:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*****************************************************************************
  48:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Function    : osSchedule
  49:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Description : task scheduling
  50:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Input       : None
  51:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Output      : None
  52:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Return      : None
  53:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *****************************************************************************/
  54:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** LITE_OS_SEC_TEXT VOID osSchedule(VOID)
  55:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** {
  28              		.loc 1 55 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  56:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     osTaskSchedule();
  40              		.loc 1 56 0
  41 0004 FFF7FEFF 		bl	osTaskSchedule
  57:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** }
  42              		.loc 1 57 0
  43 0008 00BF     		nop
  44 000a 80BD     		pop	{r7, pc}
  45              		.cfi_endproc
  46              	.LFE133:
  48              		.section	.text.LOS_Schedule,"ax",%progbits
  49              		.align	1
  50              		.global	LOS_Schedule
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	LOS_Schedule:
  57              	.LFB134:
  58:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  59:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*****************************************************************************
  60:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Function    : LOS_Schedule
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 3


  61:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Description : Function to determine whether task scheduling is required
  62:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Input       : None
  63:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Output      : None
  64:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Return      : None
  65:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *****************************************************************************/
  66:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** LITE_OS_SEC_TEXT VOID LOS_Schedule(VOID)
  67:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** {
  58              		.loc 1 67 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62 0000 80B5     		push	{r7, lr}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 82B0     		sub	sp, sp, #8
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  68:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     UINTPTR uvIntSave;
  69:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  70:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     uvIntSave = LOS_IntLock();
  73              		.loc 1 70 0
  74 0006 FFF7FEFF 		bl	LOS_IntLock
  75 000a 7860     		str	r0, [r7, #4]
  71:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  72:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     /* Find the highest task */
  73:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     g_stLosTask.pstNewTask = LOS_DL_LIST_ENTRY(osPriqueueTop(), LOS_TASK_CB, stPendList);
  76              		.loc 1 73 0
  77 000c FFF7FEFF 		bl	osPriqueueTop
  78 0010 0346     		mov	r3, r0
  79 0012 283B     		subs	r3, r3, #40
  80 0014 0B4A     		ldr	r2, .L5
  81 0016 5360     		str	r3, [r2, #4]
  74:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  75:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     /* In case that running is not highest then reschedule */
  76:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     if (g_stLosTask.pstRunTask != g_stLosTask.pstNewTask)
  82              		.loc 1 76 0
  83 0018 0A4B     		ldr	r3, .L5
  84 001a 1A68     		ldr	r2, [r3]
  85 001c 094B     		ldr	r3, .L5
  86 001e 5B68     		ldr	r3, [r3, #4]
  87 0020 9A42     		cmp	r2, r3
  88 0022 09D0     		beq	.L3
  77:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     {
  78:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****         if ((!g_usLosTaskLock))
  89              		.loc 1 78 0
  90 0024 084B     		ldr	r3, .L5+4
  91 0026 1B88     		ldrh	r3, [r3]
  92 0028 002B     		cmp	r3, #0
  93 002a 05D1     		bne	.L3
  79:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****         {
  80:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****             (VOID)LOS_IntRestore(uvIntSave);
  94              		.loc 1 80 0
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 4


  95 002c 7868     		ldr	r0, [r7, #4]
  96 002e FFF7FEFF 		bl	LOS_IntRestore
  81:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  82:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****             osTaskSchedule();
  97              		.loc 1 82 0
  98 0032 FFF7FEFF 		bl	osTaskSchedule
  83:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  84:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****             return;
  99              		.loc 1 84 0
 100 0036 02E0     		b	.L2
 101              	.L3:
  85:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****         }
  86:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     }
  87:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  88:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     (VOID)LOS_IntRestore(uvIntSave);
 102              		.loc 1 88 0
 103 0038 7868     		ldr	r0, [r7, #4]
 104 003a FFF7FEFF 		bl	LOS_IntRestore
 105              	.L2:
  89:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** }
 106              		.loc 1 89 0
 107 003e 0837     		adds	r7, r7, #8
 108              	.LCFI5:
 109              		.cfi_def_cfa_offset 8
 110 0040 BD46     		mov	sp, r7
 111              	.LCFI6:
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 0042 80BD     		pop	{r7, pc}
 115              	.L6:
 116              		.align	2
 117              	.L5:
 118 0044 00000000 		.word	g_stLosTask
 119 0048 00000000 		.word	g_usLosTaskLock
 120              		.cfi_endproc
 121              	.LFE134:
 123              		.section	.text.osTaskExit,"ax",%progbits
 124              		.align	1
 125              		.global	osTaskExit
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	osTaskExit:
 132              	.LFB135:
  90:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
  91:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*****************************************************************************
  92:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Function    : osTaskExit
  93:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Description : Task exit function
  94:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Input       : None
  95:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Output      : None
  96:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Return      : None
  97:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *****************************************************************************/
  98:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** LITE_OS_SEC_TEXT_MINOR VOID osTaskExit(VOID)
  99:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** {
 133              		.loc 1 99 0
 134              		.cfi_startproc
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 5


 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 80B4     		push	{r7}
 139              	.LCFI7:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 7, -4
 142 0002 00AF     		add	r7, sp, #0
 143              	.LCFI8:
 144              		.cfi_def_cfa_register 7
 145              	.LBB8:
 146              	.LBB9:
 147              		.file 2 "D:/iot/felix2/arch/arm/common/cmsis/cmsis_gcc.h"
   1:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**************************************************************************//**
   2:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * @version  V5.0.1
   5:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * @date     02. February 2017
   6:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  ******************************************************************************/
   7:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /*
   8:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  *
  10:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  *
  12:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  *
  16:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  *
  18:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * limitations under the License.
  23:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
  24:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  25:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  28:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  34:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __ASM
  36:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __ASM                     __asm
  37:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  38:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __INLINE
  39:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __INLINE                  inline
  40:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  41:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  44:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 6


  45:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  47:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __USED
  48:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  50:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __WEAK
  51:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  53:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  61:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  64:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __PACKED
  65:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  67:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
  70:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  71:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  72:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   @{
  76:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
  77:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  78:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
  79:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
  83:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
  85:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
  87:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  88:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  89:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
  90:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
  94:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
  96:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 148              		.loc 2 96 0
 149              		.syntax unified
 150              	@ 96 "D:/iot/felix2/arch/arm/common/cmsis/cmsis_gcc.h" 1
 151 0004 72B6     		cpsid i
 152              	@ 0 "" 2
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 7


 153              		.thumb
 154              		.syntax unified
 155              	.L8:
 156              	.LBE9:
 157              	.LBE8:
 100:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     __disable_irq();
 101:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     while(1);
 158              		.loc 1 101 0 discriminator 1
 159 0006 FEE7     		b	.L8
 160              		.cfi_endproc
 161              	.LFE135:
 163              		.section	.text.osTskStackInit,"ax",%progbits
 164              		.align	1
 165              		.global	osTskStackInit
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	osTskStackInit:
 172              	.LFB136:
 102:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** }
 103:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 104:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** /*****************************************************************************
 105:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Function    : osTskStackInit
 106:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Description : Task stack initialization function
 107:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Input       : uwTaskID     --- TaskID
 108:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****                uwStackSize  --- Total size of the stack
 109:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****                pTopStack    --- Top of task's stack
 110:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Output      : None
 111:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  Return      : Context pointer
 112:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****  *****************************************************************************/
 113:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** LITE_OS_SEC_TEXT_INIT VOID *osTskStackInit(UINT32 uwTaskID, UINT32 uwStackSize, VOID *pTopStack)
 114:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** {
 173              		.loc 1 114 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 24
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              	.LCFI9:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 86B0     		sub	sp, sp, #24
 183              	.LCFI10:
 184              		.cfi_def_cfa_offset 32
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI11:
 187              		.cfi_def_cfa_register 7
 188 0006 F860     		str	r0, [r7, #12]
 189 0008 B960     		str	r1, [r7, #8]
 190 000a 7A60     		str	r2, [r7, #4]
 115:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     TSK_CONTEXT_S  *pstContext;
 116:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 117:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     /*initialize the task stack, write magic num to stack top*/
 118:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     memset(pTopStack, OS_TASK_STACK_INIT, uwStackSize);
 191              		.loc 1 118 0
 192 000c BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 8


 193 000e 4FF0CA31 		mov	r1, #-892679478
 194 0012 7868     		ldr	r0, [r7, #4]
 195 0014 FFF7FEFF 		bl	memset
 119:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     *((UINT32 *)(pTopStack)) = OS_TASK_MAGIC_WORD;
 196              		.loc 1 119 0
 197 0018 7B68     		ldr	r3, [r7, #4]
 198 001a 4FF0CC32 		mov	r2, #-858993460
 199 001e 1A60     		str	r2, [r3]
 120:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 121:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext    = (TSK_CONTEXT_S *)(((UINT32)pTopStack + uwStackSize) - sizeof(TSK_CONTEXT_S));
 200              		.loc 1 121 0
 201 0020 7A68     		ldr	r2, [r7, #4]
 202 0022 BB68     		ldr	r3, [r7, #8]
 203 0024 1344     		add	r3, r3, r2
 204 0026 483B     		subs	r3, r3, #72
 205 0028 7B61     		str	r3, [r7, #20]
 122:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 123:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR4  = 0x04040404L;
 206              		.loc 1 123 0
 207 002a 7B69     		ldr	r3, [r7, #20]
 208 002c 4FF00432 		mov	r2, #67372036
 209 0030 1A60     		str	r2, [r3]
 124:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR5  = 0x05050505L;
 210              		.loc 1 124 0
 211 0032 7B69     		ldr	r3, [r7, #20]
 212 0034 4FF00532 		mov	r2, #84215045
 213 0038 5A60     		str	r2, [r3, #4]
 125:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR6  = 0x06060606L;
 214              		.loc 1 125 0
 215 003a 7B69     		ldr	r3, [r7, #20]
 216 003c 4FF00632 		mov	r2, #101058054
 217 0040 9A60     		str	r2, [r3, #8]
 126:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR7  = 0x07070707L;
 218              		.loc 1 126 0
 219 0042 7B69     		ldr	r3, [r7, #20]
 220 0044 4FF00732 		mov	r2, #117901063
 221 0048 DA60     		str	r2, [r3, #12]
 127:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR8  = 0x08080808L;
 222              		.loc 1 127 0
 223 004a 7B69     		ldr	r3, [r7, #20]
 224 004c 4FF00832 		mov	r2, #134744072
 225 0050 1A61     		str	r2, [r3, #16]
 128:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR9  = 0x09090909L;
 226              		.loc 1 128 0
 227 0052 7B69     		ldr	r3, [r7, #20]
 228 0054 4FF00932 		mov	r2, #151587081
 229 0058 5A61     		str	r2, [r3, #20]
 129:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR10 = 0x10101010L;
 230              		.loc 1 129 0
 231 005a 7B69     		ldr	r3, [r7, #20]
 232 005c 4FF01032 		mov	r2, #269488144
 233 0060 9A61     		str	r2, [r3, #24]
 130:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR11 = 0x11111111L;
 234              		.loc 1 130 0
 235 0062 7B69     		ldr	r3, [r7, #20]
 236 0064 4FF01132 		mov	r2, #286331153
 237 0068 DA61     		str	r2, [r3, #28]
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 9


 131:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     /* The initial interruption state(PRIMASK value: 0 --- enable) of the task */
 132:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwPriMask = 0;
 238              		.loc 1 132 0
 239 006a 7B69     		ldr	r3, [r7, #20]
 240 006c 0022     		movs	r2, #0
 241 006e 1A62     		str	r2, [r3, #32]
 133:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #if FPU_EXIST
 134:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     /**
 135:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****      * The initial EXC_RETURN value(use 8 word stack frame, return to thread mode and use PSP).
 136:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****      * Please do not modify it.
 137:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****      */
 138:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwExcReturn = 0xFFFFFFFD;
 242              		.loc 1 138 0
 243 0070 7B69     		ldr	r3, [r7, #20]
 244 0072 6FF00202 		mvn	r2, #2
 245 0076 5A62     		str	r2, [r3, #36]
 139:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** #endif
 140:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR0  = uwTaskID;
 246              		.loc 1 140 0
 247 0078 7B69     		ldr	r3, [r7, #20]
 248 007a FA68     		ldr	r2, [r7, #12]
 249 007c 9A62     		str	r2, [r3, #40]
 141:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR1  = 0x01010101L;
 250              		.loc 1 141 0
 251 007e 7B69     		ldr	r3, [r7, #20]
 252 0080 4FF00132 		mov	r2, #16843009
 253 0084 DA62     		str	r2, [r3, #44]
 142:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR2  = 0x02020202L;
 254              		.loc 1 142 0
 255 0086 7B69     		ldr	r3, [r7, #20]
 256 0088 4FF00232 		mov	r2, #33686018
 257 008c 1A63     		str	r2, [r3, #48]
 143:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR3  = 0x03030303L;
 258              		.loc 1 143 0
 259 008e 7B69     		ldr	r3, [r7, #20]
 260 0090 4FF00332 		mov	r2, #50529027
 261 0094 5A63     		str	r2, [r3, #52]
 144:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwR12 = 0x12121212L;
 262              		.loc 1 144 0
 263 0096 7B69     		ldr	r3, [r7, #20]
 264 0098 4FF01232 		mov	r2, #303174162
 265 009c 9A63     		str	r2, [r3, #56]
 145:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwLR  = (UINT32)osTaskExit;
 266              		.loc 1 145 0
 267 009e 074A     		ldr	r2, .L11
 268 00a0 7B69     		ldr	r3, [r7, #20]
 269 00a2 DA63     		str	r2, [r3, #60]
 146:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwPC  = (UINT32)osTaskEntry;
 270              		.loc 1 146 0
 271 00a4 064A     		ldr	r2, .L11+4
 272 00a6 7B69     		ldr	r3, [r7, #20]
 273 00a8 1A64     		str	r2, [r3, #64]
 147:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     pstContext->uwxPSR = 0x01000000L;
 274              		.loc 1 147 0
 275 00aa 7B69     		ldr	r3, [r7, #20]
 276 00ac 4FF08072 		mov	r2, #16777216
 277 00b0 5A64     		str	r2, [r3, #68]
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 10


 148:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 149:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     return (VOID *)pstContext;
 278              		.loc 1 149 0
 279 00b2 7B69     		ldr	r3, [r7, #20]
 150:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** }
 280              		.loc 1 150 0
 281 00b4 1846     		mov	r0, r3
 282 00b6 1837     		adds	r7, r7, #24
 283              	.LCFI12:
 284              		.cfi_def_cfa_offset 8
 285 00b8 BD46     		mov	sp, r7
 286              	.LCFI13:
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 00ba 80BD     		pop	{r7, pc}
 290              	.L12:
 291              		.align	2
 292              	.L11:
 293 00bc 00000000 		.word	osTaskExit
 294 00c0 00000000 		.word	osTaskEntry
 295              		.cfi_endproc
 296              	.LFE136:
 298              		.section	.text.osEnterSleep,"ax",%progbits
 299              		.align	1
 300              		.global	osEnterSleep
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	osEnterSleep:
 307              	.LFB137:
 151:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** 
 152:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** LITE_OS_SEC_TEXT_INIT VOID osEnterSleep(VOID)
 153:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** {
 308              		.loc 1 153 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              	.LCFI14:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 00AF     		add	r7, sp, #0
 318              	.LCFI15:
 319              		.cfi_def_cfa_register 7
 320              	.LBB10:
 321              	.LBB11:
  97:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
  98:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
  99:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 100:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 101:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Control Register
 102:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Control Register value
 104:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 105:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 11


 106:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 107:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 108:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 109:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 111:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 112:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 113:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 114:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 116:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               non-secure Control Register value
 119:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 120:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 122:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 123:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 124:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 126:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 127:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 128:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 129:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 130:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 131:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Control Register
 132:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 135:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 137:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 139:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 140:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 141:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 143:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 147:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 149:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 151:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 152:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 153:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 154:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 155:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get IPSR Register
 156:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               IPSR Register value
 158:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 159:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 161:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 162:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 12


 163:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 165:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 166:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 167:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 168:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 169:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get APSR Register
 170:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               APSR Register value
 172:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 173:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 175:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 176:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 177:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 179:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 180:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 181:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 182:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 183:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get xPSR Register
 184:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               xPSR Register value
 186:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 187:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 189:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 190:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 191:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 193:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 194:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 195:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 196:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 197:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               PSP Register value
 200:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 201:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 203:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 204:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 205:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 207:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 208:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 209:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 210:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 212:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               PSP Register value
 215:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 216:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 218:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 219:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 13


 220:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 222:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 223:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 224:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 225:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 226:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 227:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 231:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 233:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 235:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 236:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 237:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 239:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 243:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 245:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 247:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 248:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 249:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 250:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 251:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               MSP Register value
 254:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 255:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 257:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 258:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 259:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 261:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 262:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 263:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 264:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 266:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               MSP Register value
 269:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 270:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 272:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 273:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 274:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 276:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 14


 277:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 278:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 279:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 280:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 281:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 285:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 287:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 289:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 290:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 291:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 293:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 297:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 299:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 301:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 302:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 303:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 304:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 305:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Priority Mask
 306:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Priority Mask value
 308:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 309:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 311:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 312:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 313:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 315:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 316:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 317:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 318:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 320:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Priority Mask value
 323:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 324:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 326:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 327:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 328:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 330:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 331:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 332:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 333:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 15


 334:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 335:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Priority Mask
 336:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 339:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 341:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 343:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 344:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 345:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 347:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 351:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 353:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 355:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 356:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 357:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 358:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 362:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Enable FIQ
 363:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 366:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 368:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 370:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 371:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 372:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 373:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Disable FIQ
 374:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 377:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 379:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 381:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 382:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 383:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 384:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Base Priority
 385:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Base Priority register value
 387:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 388:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 390:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 16


 391:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 392:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 394:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 395:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 396:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 397:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 399:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Base Priority register value
 402:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 403:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 405:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 406:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 407:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 409:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 410:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 411:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 412:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 413:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 414:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Base Priority
 415:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 418:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 420:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 422:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 423:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 424:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 426:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 430:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 432:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 434:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 435:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 436:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 437:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 438:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 443:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 445:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 447:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 17


 448:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 449:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 450:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Fault Mask
 451:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Fault Mask register value
 453:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 454:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 456:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 457:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 458:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 460:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 461:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 462:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 463:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 465:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Fault Mask register value
 468:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 469:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 471:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 472:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 473:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 475:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 476:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 477:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 478:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 479:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 480:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Fault Mask
 481:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 484:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 486:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 488:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 489:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 490:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 492:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 496:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 498:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 500:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 501:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 502:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 18


 505:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 506:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 507:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 510:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 511:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               PSPLIM Register value
 514:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 515:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 517:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 518:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 519:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 521:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 522:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 523:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 524:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 527:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               PSPLIM Register value
 530:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 531:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 533:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 534:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 535:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 537:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 538:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 539:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 540:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 541:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 542:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 546:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 548:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 550:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 551:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 552:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 555:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 559:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 561:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 19


 562:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 563:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 564:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 565:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 566:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 567:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               MSPLIM Register value
 570:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 571:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 573:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 574:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 575:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 577:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 578:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 579:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 580:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 581:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 584:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               MSPLIM Register value
 587:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 588:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 590:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   register uint32_t result;
 591:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 592:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 594:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 595:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 596:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 597:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 598:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 599:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 603:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 605:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 607:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 608:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 609:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 612:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 616:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 618:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 20


 619:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 620:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 621:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 622:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 625:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 626:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 629:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 630:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Get FPSCR
 631:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 634:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 636:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   uint32_t result;
 639:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 640:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   return(result);
 642:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #else
 643:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****    return(0U);
 644:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 645:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 646:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 647:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 648:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 649:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Set FPSCR
 650:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 653:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 655:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #else
 659:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   (void)fpscr;
 660:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 661:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 662:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 663:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 666:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 667:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 668:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 670:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 671:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   Access to dedicated instructions
 674:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   @{
 675:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** */
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 21


 676:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 677:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #else
 685:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #endif
 689:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 690:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 691:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   No Operation
 692:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 694:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //{
 696:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //}
 698:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 700:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 701:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 704:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //{
 706:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //}
 708:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 710:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 711:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 712:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Wait For Event
 713:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 716:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //{
 718:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //}
 720:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 722:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 723:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 724:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Send Event
 725:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 727:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //{
 729:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** //}
 731:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 22


 733:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 734:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 735:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            after the instruction has been completed.
 739:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 740:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 742:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 744:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 745:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** 
 746:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** /**
 747:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****  */
 751:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** {
 753:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 322              		.loc 2 753 0
 323              		.syntax unified
 324              	@ 753 "D:/iot/felix2/arch/arm/common/cmsis/cmsis_gcc.h" 1
 325 0004 BFF34F8F 		dsb 0xF
 326              	@ 0 "" 2
 327              		.thumb
 328              		.syntax unified
 329              	.LBE11:
 330              	.LBE10:
 154:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     __DSB();
 155:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     __WFI();
 331              		.loc 1 155 0
 332              		.syntax unified
 333              	@ 155 "D:/iot/felix2/arch/arm/arm-m/src/los_hw.c" 1
 334 0008 30BF     		wfi
 335              	@ 0 "" 2
 336              		.thumb
 337              		.syntax unified
 338              	.LBB12:
 339              	.LBB13:
 742:D:/iot/felix2/arch/arm/common/cmsis\cmsis_gcc.h **** }
 340              		.loc 2 742 0
 341              		.syntax unified
 342              	@ 742 "D:/iot/felix2/arch/arm/common/cmsis/cmsis_gcc.h" 1
 343 000a BFF36F8F 		isb 0xF
 344              	@ 0 "" 2
 345              		.thumb
 346              		.syntax unified
 347              	.LBE13:
 348              	.LBE12:
 156:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c ****     __ISB();
 157:D:/iot/felix2/arch/arm/arm-m/src\los_hw.c **** }
 349              		.loc 1 157 0
 350 000e 00BF     		nop
 351 0010 BD46     		mov	sp, r7
 352              	.LCFI16:
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 23


 353              		.cfi_def_cfa_register 13
 354              		@ sp needed
 355 0012 5DF8047B 		ldr	r7, [sp], #4
 356              	.LCFI17:
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0016 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE137:
 363              		.text
 364              	.Letext0:
 365              		.file 3 "d:\\liteos studio\\resources\\arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_ty
 366              		.file 4 "d:\\liteos studio\\resources\\arm-none-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 367              		.file 5 "d:\\liteos studio\\resources\\arm-none-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 368              		.file 6 "d:\\liteos studio\\resources\\arm-none-eabi\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\std
 369              		.file 7 "d:\\liteos studio\\resources\\arm-none-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 370              		.file 8 "D:/iot/felix2/kernel/include/los_typedef.h"
 371              		.file 9 "d:\\liteos studio\\resources\\arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 372              		.file 10 "D:/iot/felix2/arch/arm/common/cmsis/core_cm4.h"
 373              		.file 11 "D:/iot/felix2/targets/Cloud_STM32L431_BearPi/Inc/system_stm32l4xx.h"
 374              		.file 12 "D:/iot/felix2/arch/arm/arm-m/include/los_hwi.h"
 375              		.file 13 "D:/iot/felix2/kernel/include/los_list.h"
 376              		.file 14 "D:/iot/felix2/arch/arm/arm-m/include/los_hw.h"
 377              		.file 15 "D:/iot/felix2/kernel/include/los_err.h"
 378              		.file 16 "D:/iot/felix2/kernel/include/los_tick.h"
 379              		.file 17 "D:/iot/felix2/kernel/include/los_event.h"
 380              		.file 18 "D:/iot/felix2/kernel/include/los_task.h"
 381              		.file 19 "D:/iot/felix2/kernel/base/include/los_task.ph"
 382              		.file 20 "D:/iot/felix2/targets/Cloud_STM32L431_BearPi/Inc/main.h"
 383              		.file 21 "D:/iot/felix2/targets/Cloud_STM32L431_BearPi/OS_CONFIG/target_config.h"
 384              		.file 22 "D:/iot/felix2/kernel/include/los_config.h"
ARM GAS  C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 los_hw.c
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:18     .text.osSchedule:00000000 $t
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:25     .text.osSchedule:00000000 osSchedule
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:49     .text.LOS_Schedule:00000000 $t
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:56     .text.LOS_Schedule:00000000 LOS_Schedule
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:118    .text.LOS_Schedule:00000044 $d
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:124    .text.osTaskExit:00000000 $t
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:131    .text.osTaskExit:00000000 osTaskExit
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:164    .text.osTskStackInit:00000000 $t
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:171    .text.osTskStackInit:00000000 osTskStackInit
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:293    .text.osTskStackInit:000000bc $d
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:299    .text.osEnterSleep:00000000 $t
C:\Users\91458\AppData\Local\Temp\ccnDG9Ne.s:306    .text.osEnterSleep:00000000 osEnterSleep

UNDEFINED SYMBOLS
osTaskSchedule
LOS_IntLock
osPriqueueTop
LOS_IntRestore
g_stLosTask
g_usLosTaskLock
memset
osTaskEntry
